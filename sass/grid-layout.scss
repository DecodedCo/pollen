@import 'mixins';

    /*! ===========================================================
Pollen - Decoded Styles // by Jonas Haefele 2014
============================================================ */
    
/* 
Layout and Grids
=====================================================================

The grid is based on SUIT Grud Layout
https://github.com/suitcss/grid-layouts

Layouts are inherited by wider viewports.

## v1: narrow-width viewports (default)

v1-Grid--2col: Split into 2 columns
v1-Grid--3col: Split into 3 columns

## v2: medium-width viewports (>= 25em, defined in sass-variables)

v2-Grid--1col: One column
v2-Grid--2col: Split into 2 columns
v2-Grid--3col: Split into 3 columns
v2-Grid--4col: Split into 4 columns
v2-Grid--1to2: Split into 2 columns, 1:2 ratio (requires 2 cells)
v2-Grid--2to1: Split into 2 columns, 2:1 ratio (requires 2 cells)
v2-Grid--1to3: Split into 2 columns, 1:3 ratio (requires 2 cells)
v2-Grid--3to1: Split into 2 columns, 3:1 ratio (requires 2 cells)
v2-Grid--3on1: Split into 3 columns stacked on 1 column (requires 4 cells)
v2-Grid--fitToFill: Split into 2 columns, fit:fill ratio (requires 2 cells)

## v3: wide-width viewports (>= 50em, defined in sass-variables)

v3-Grid--1col: One column
v3-Grid--2col: Split into 2 columns
v3-Grid--3col: Split into 3 columns
v3-Grid--4col: Split into 4 columns
v3-Grid--1to2: Split into 2 columns, 1:2 ratio (requires 2 cells)
v3-Grid--2to1: Split into 2 columns, 2:1 ratio (requires 2 cells)
v3-Grid--2to3: Split into 2 columns, 2:3 ratio (requires 2 cells)
v3-Grid--3to2: Split into 2 columns, 3:2 ratio (requires 2 cells)


Make make a grid that has two collumns at small sizes and breaks into four columns at medium screen sizes:
```
<div class="Grid v1-Grid--2col v2-Grid--4col">
    <div class="Grid-cell Grid-cell--1">…</div>
    <div class="Grid-cell Grid-cell--2">…</div>
    <div class="Grid-cell Grid-cell--3">…</div>
    <div class="Grid-cell Grid-cell--4">…</div>
</div>
```

The following example is a grid that changes from being a single column of cells by default (at narrow viewports - v1), to two columns (at medium viewports - v2), to 4 columns (at wide viewports - v3):
```
<div class="Grid v2-Grid--2col v3-Grid--4col">
    <div class="Grid-cell Grid-cell--1">…</div>
    <div class="Grid-cell Grid-cell--2">…</div>
    <div class="Grid-cell Grid-cell--3">…</div>
    <div class="Grid-cell Grid-cell--4">…</div>
</div>
```

Nesting grids is easy. Each grid adapts independently of its context. In the follow example, a grid changes from 1 column (narrow) to 2 columns (medium, and wide). A second grid is nested within the first cell of this grid. This nested grid changes from 2 columns (narrow, and medium) to 4 columns (wide) using the same global breakpoints.
```
<!-- outer grid -->
<div class="Grid v2-Grid--2col">
    <div class="Grid-cell Grid-cell--1">
        <!-- inner grid -->
        <div class="Grid v1-Grid--2col v3-Grid--4col">
            <div class="Grid-cell Grid-cell--1">…</div>
            <div class="Grid-cell Grid-cell--2">…</div>
            <div class="Grid-cell Grid-cell--3">…</div>
            <div class="Grid-cell Grid-cell--4">…</div>
        </div>
    </div>
    <div class="Grid-cell Grid-cell--2">
        …
    </div>
</div>
```
*/

@import '../bower_components/suit-grid/grid.css';
@import '../bower_components/suit-grid-layouts/grid-layouts-v1.css';
@include respond-to(medium-screens){
	@import '../bower_components/suit-grid-layouts/grid-layouts-v2.css';
}
@include respond-to(large-screens){
	@import '../bower_components/suit-grid-layouts/grid-layouts-v3.css';
}